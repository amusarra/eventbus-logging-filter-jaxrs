# The path of the banner (path relative to root of classpath) which could be provided by user
quarkus.banner.path=quarkus-banner.txt

# Logging configuration
quarkus.log.category."it.dontesta.eventbus.ws.filter.TraceJaxRsRequestResponseFilter".level=DEBUG
quarkus.log.category."it.dontesta.eventbus.consumers.http".level=DEBUG
quarkus.log.category."it.dontesta.eventbus.consumers.events.handlers.Dispatcher".level=DEBUG
quarkus.log.category."it.dontesta.eventbus.consumers.events.handlers".level=DEBUG

##
## Application configuration properties
##

# Enable or disable the JX-RS filter. Default is true.
app.filter.enabled=true

# The URIs that the filter should be applied to.
app.filter.uris[0]=/api/rest

# Define the Event Bus virtual address for the HTTP request event
app.eventbus.consumer.http.request.address=http-request

# Define the Event Bus virtual address for the HTTP response event
app.eventbus.consumer.http.response.address=http-response

# Define the Event Bus virtual address for event handler SQL, NoSQL and Queue
app.eventbus.consumer.event.handler.addresses[0]=sql-trace
app.eventbus.consumer.event.handler.addresses[1]=nosql-trace
app.eventbus.consumer.event.handler.addresses[2]=queue-trace

# Define the Event Bus virtual address for the Dispatcher
app.eventbus.consumer.dispatcher.address=dispatcher-event

# Define the database name for the NoSQL trace event
app.eventbus.consumer.event.handler.nosql.mongodb.database.name=audit

# Define the collection name for the NoSQL trace event
app.eventbus.consumer.event.handler.nosql.mongodb.database.collection=jax-rs-requests

# Configure the outgoing/incoming AMQP connector and address
# The outgoing connector is used to send the HTTP request and response events to the AMQP broker
# The incoming connector is used to receive the HTTP request and response events from the AMQP broker
mp.messaging.outgoing.http-request-out.connector=smallrye-amqp
mp.messaging.outgoing.http-response-out.connector=smallrye-amqp
mp.messaging.outgoing.http-request-out.address=http-request
mp.messaging.outgoing.http-response-out.address=http-response

# Remove the comment to enable the incoming connector and address
# when the application is used as a consumer of the HTTP request and response events
# See the AmqpConsumer class for more details.
#mp.messaging.incoming.http-request-in.connector=smallrye-amqp
#mp.messaging.incoming.http-response-in.connector=smallrye-amqp
#mp.messaging.incoming.http-request-in.address=http-request
#mp.messaging.incoming.http-response-in.address=http-response